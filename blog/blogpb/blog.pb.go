// Code generated by protoc-gen-go. DO NOT EDIT.
// source: blog/blogpb/blog.proto

/*
Package blogpb is a generated protocol buffer package.

It is generated from these files:
	blog/blogpb/blog.proto

It has these top-level messages:
	Blog
	CreateBlogRequest
	CreateBlogResponse
	ReadBlogRequest
	ReadBlogResponse
	ReadAllBlogRequest
	ReadAllBlogResponse
	UpdateBlogRequest
	UpdateBlogResponse
	DeleteBlogRequest
	DeleteBlogResponse
	ListBlogRequest
	ListBlogResponse
*/
package blogpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Blog struct {
	Id      string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Author  string `protobuf:"bytes,2,opt,name=author" json:"author,omitempty"`
	Title   string `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Content string `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
}

func (m *Blog) Reset()                    { *m = Blog{} }
func (m *Blog) String() string            { return proto.CompactTextString(m) }
func (*Blog) ProtoMessage()               {}
func (*Blog) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Blog) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Blog) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Blog) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Blog) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type CreateBlogRequest struct {
	Blog *Blog `protobuf:"bytes,1,opt,name=blog" json:"blog,omitempty"`
}

func (m *CreateBlogRequest) Reset()                    { *m = CreateBlogRequest{} }
func (m *CreateBlogRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateBlogRequest) ProtoMessage()               {}
func (*CreateBlogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateBlogRequest) GetBlog() *Blog {
	if m != nil {
		return m.Blog
	}
	return nil
}

type CreateBlogResponse struct {
	Blog *Blog `protobuf:"bytes,1,opt,name=blog" json:"blog,omitempty"`
}

func (m *CreateBlogResponse) Reset()                    { *m = CreateBlogResponse{} }
func (m *CreateBlogResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateBlogResponse) ProtoMessage()               {}
func (*CreateBlogResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateBlogResponse) GetBlog() *Blog {
	if m != nil {
		return m.Blog
	}
	return nil
}

type ReadBlogRequest struct {
	BlogId string `protobuf:"bytes,1,opt,name=blog_id,json=blogId" json:"blog_id,omitempty"`
}

func (m *ReadBlogRequest) Reset()                    { *m = ReadBlogRequest{} }
func (m *ReadBlogRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadBlogRequest) ProtoMessage()               {}
func (*ReadBlogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadBlogRequest) GetBlogId() string {
	if m != nil {
		return m.BlogId
	}
	return ""
}

type ReadBlogResponse struct {
	Blog *Blog `protobuf:"bytes,1,opt,name=blog" json:"blog,omitempty"`
}

func (m *ReadBlogResponse) Reset()                    { *m = ReadBlogResponse{} }
func (m *ReadBlogResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadBlogResponse) ProtoMessage()               {}
func (*ReadBlogResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadBlogResponse) GetBlog() *Blog {
	if m != nil {
		return m.Blog
	}
	return nil
}

type ReadAllBlogRequest struct {
	Search string `protobuf:"bytes,1,opt,name=search" json:"search,omitempty"`
	Page   int32  `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
}

func (m *ReadAllBlogRequest) Reset()                    { *m = ReadAllBlogRequest{} }
func (m *ReadAllBlogRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadAllBlogRequest) ProtoMessage()               {}
func (*ReadAllBlogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ReadAllBlogRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *ReadAllBlogRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type ReadAllBlogResponse struct {
	Blog []*Blog `protobuf:"bytes,1,rep,name=blog" json:"blog,omitempty"`
}

func (m *ReadAllBlogResponse) Reset()                    { *m = ReadAllBlogResponse{} }
func (m *ReadAllBlogResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadAllBlogResponse) ProtoMessage()               {}
func (*ReadAllBlogResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ReadAllBlogResponse) GetBlog() []*Blog {
	if m != nil {
		return m.Blog
	}
	return nil
}

type UpdateBlogRequest struct {
	BlogId string `protobuf:"bytes,1,opt,name=blog_id,json=blogId" json:"blog_id,omitempty"`
	Blog   *Blog  `protobuf:"bytes,2,opt,name=blog" json:"blog,omitempty"`
}

func (m *UpdateBlogRequest) Reset()                    { *m = UpdateBlogRequest{} }
func (m *UpdateBlogRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateBlogRequest) ProtoMessage()               {}
func (*UpdateBlogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateBlogRequest) GetBlogId() string {
	if m != nil {
		return m.BlogId
	}
	return ""
}

func (m *UpdateBlogRequest) GetBlog() *Blog {
	if m != nil {
		return m.Blog
	}
	return nil
}

type UpdateBlogResponse struct {
	Blog *Blog `protobuf:"bytes,1,opt,name=blog" json:"blog,omitempty"`
}

func (m *UpdateBlogResponse) Reset()                    { *m = UpdateBlogResponse{} }
func (m *UpdateBlogResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateBlogResponse) ProtoMessage()               {}
func (*UpdateBlogResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *UpdateBlogResponse) GetBlog() *Blog {
	if m != nil {
		return m.Blog
	}
	return nil
}

type DeleteBlogRequest struct {
	BlogId string `protobuf:"bytes,1,opt,name=blog_id,json=blogId" json:"blog_id,omitempty"`
}

func (m *DeleteBlogRequest) Reset()                    { *m = DeleteBlogRequest{} }
func (m *DeleteBlogRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteBlogRequest) ProtoMessage()               {}
func (*DeleteBlogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DeleteBlogRequest) GetBlogId() string {
	if m != nil {
		return m.BlogId
	}
	return ""
}

type DeleteBlogResponse struct {
	BlogId string `protobuf:"bytes,1,opt,name=blog_id,json=blogId" json:"blog_id,omitempty"`
}

func (m *DeleteBlogResponse) Reset()                    { *m = DeleteBlogResponse{} }
func (m *DeleteBlogResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteBlogResponse) ProtoMessage()               {}
func (*DeleteBlogResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *DeleteBlogResponse) GetBlogId() string {
	if m != nil {
		return m.BlogId
	}
	return ""
}

type ListBlogRequest struct {
	Search string `protobuf:"bytes,1,opt,name=search" json:"search,omitempty"`
	Page   int32  `protobuf:"varint,2,opt,name=page" json:"page,omitempty"`
}

func (m *ListBlogRequest) Reset()                    { *m = ListBlogRequest{} }
func (m *ListBlogRequest) String() string            { return proto.CompactTextString(m) }
func (*ListBlogRequest) ProtoMessage()               {}
func (*ListBlogRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ListBlogRequest) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *ListBlogRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

type ListBlogResponse struct {
	Blog *Blog `protobuf:"bytes,1,opt,name=blog" json:"blog,omitempty"`
}

func (m *ListBlogResponse) Reset()                    { *m = ListBlogResponse{} }
func (m *ListBlogResponse) String() string            { return proto.CompactTextString(m) }
func (*ListBlogResponse) ProtoMessage()               {}
func (*ListBlogResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ListBlogResponse) GetBlog() *Blog {
	if m != nil {
		return m.Blog
	}
	return nil
}

func init() {
	proto.RegisterType((*Blog)(nil), "blog.Blog")
	proto.RegisterType((*CreateBlogRequest)(nil), "blog.CreateBlogRequest")
	proto.RegisterType((*CreateBlogResponse)(nil), "blog.CreateBlogResponse")
	proto.RegisterType((*ReadBlogRequest)(nil), "blog.ReadBlogRequest")
	proto.RegisterType((*ReadBlogResponse)(nil), "blog.ReadBlogResponse")
	proto.RegisterType((*ReadAllBlogRequest)(nil), "blog.ReadAllBlogRequest")
	proto.RegisterType((*ReadAllBlogResponse)(nil), "blog.ReadAllBlogResponse")
	proto.RegisterType((*UpdateBlogRequest)(nil), "blog.UpdateBlogRequest")
	proto.RegisterType((*UpdateBlogResponse)(nil), "blog.UpdateBlogResponse")
	proto.RegisterType((*DeleteBlogRequest)(nil), "blog.DeleteBlogRequest")
	proto.RegisterType((*DeleteBlogResponse)(nil), "blog.DeleteBlogResponse")
	proto.RegisterType((*ListBlogRequest)(nil), "blog.ListBlogRequest")
	proto.RegisterType((*ListBlogResponse)(nil), "blog.ListBlogResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for BlogService service

type BlogServiceClient interface {
	CreateBlog(ctx context.Context, in *CreateBlogRequest, opts ...grpc.CallOption) (*CreateBlogResponse, error)
	ReadBlog(ctx context.Context, in *ReadBlogRequest, opts ...grpc.CallOption) (*ReadBlogResponse, error)
	ReadAllBlog(ctx context.Context, in *ReadAllBlogRequest, opts ...grpc.CallOption) (*ReadAllBlogResponse, error)
	UpdateBlog(ctx context.Context, in *UpdateBlogRequest, opts ...grpc.CallOption) (*UpdateBlogResponse, error)
	DeleteBlog(ctx context.Context, in *DeleteBlogRequest, opts ...grpc.CallOption) (*DeleteBlogResponse, error)
	ListBlog(ctx context.Context, in *ListBlogRequest, opts ...grpc.CallOption) (BlogService_ListBlogClient, error)
}

type blogServiceClient struct {
	cc *grpc.ClientConn
}

func NewBlogServiceClient(cc *grpc.ClientConn) BlogServiceClient {
	return &blogServiceClient{cc}
}

func (c *blogServiceClient) CreateBlog(ctx context.Context, in *CreateBlogRequest, opts ...grpc.CallOption) (*CreateBlogResponse, error) {
	out := new(CreateBlogResponse)
	err := grpc.Invoke(ctx, "/blog.BlogService/CreateBlog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) ReadBlog(ctx context.Context, in *ReadBlogRequest, opts ...grpc.CallOption) (*ReadBlogResponse, error) {
	out := new(ReadBlogResponse)
	err := grpc.Invoke(ctx, "/blog.BlogService/ReadBlog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) ReadAllBlog(ctx context.Context, in *ReadAllBlogRequest, opts ...grpc.CallOption) (*ReadAllBlogResponse, error) {
	out := new(ReadAllBlogResponse)
	err := grpc.Invoke(ctx, "/blog.BlogService/ReadAllBlog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) UpdateBlog(ctx context.Context, in *UpdateBlogRequest, opts ...grpc.CallOption) (*UpdateBlogResponse, error) {
	out := new(UpdateBlogResponse)
	err := grpc.Invoke(ctx, "/blog.BlogService/UpdateBlog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) DeleteBlog(ctx context.Context, in *DeleteBlogRequest, opts ...grpc.CallOption) (*DeleteBlogResponse, error) {
	out := new(DeleteBlogResponse)
	err := grpc.Invoke(ctx, "/blog.BlogService/DeleteBlog", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blogServiceClient) ListBlog(ctx context.Context, in *ListBlogRequest, opts ...grpc.CallOption) (BlogService_ListBlogClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_BlogService_serviceDesc.Streams[0], c.cc, "/blog.BlogService/ListBlog", opts...)
	if err != nil {
		return nil, err
	}
	x := &blogServiceListBlogClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BlogService_ListBlogClient interface {
	Recv() (*ListBlogResponse, error)
	grpc.ClientStream
}

type blogServiceListBlogClient struct {
	grpc.ClientStream
}

func (x *blogServiceListBlogClient) Recv() (*ListBlogResponse, error) {
	m := new(ListBlogResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for BlogService service

type BlogServiceServer interface {
	CreateBlog(context.Context, *CreateBlogRequest) (*CreateBlogResponse, error)
	ReadBlog(context.Context, *ReadBlogRequest) (*ReadBlogResponse, error)
	ReadAllBlog(context.Context, *ReadAllBlogRequest) (*ReadAllBlogResponse, error)
	UpdateBlog(context.Context, *UpdateBlogRequest) (*UpdateBlogResponse, error)
	DeleteBlog(context.Context, *DeleteBlogRequest) (*DeleteBlogResponse, error)
	ListBlog(*ListBlogRequest, BlogService_ListBlogServer) error
}

func RegisterBlogServiceServer(s *grpc.Server, srv BlogServiceServer) {
	s.RegisterService(&_BlogService_serviceDesc, srv)
}

func _BlogService_CreateBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).CreateBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/CreateBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).CreateBlog(ctx, req.(*CreateBlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_ReadBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadBlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).ReadBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/ReadBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).ReadBlog(ctx, req.(*ReadBlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_ReadAllBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAllBlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).ReadAllBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/ReadAllBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).ReadAllBlog(ctx, req.(*ReadAllBlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_UpdateBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).UpdateBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/UpdateBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).UpdateBlog(ctx, req.(*UpdateBlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_DeleteBlog_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBlogRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlogServiceServer).DeleteBlog(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blog.BlogService/DeleteBlog",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlogServiceServer).DeleteBlog(ctx, req.(*DeleteBlogRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BlogService_ListBlog_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListBlogRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BlogServiceServer).ListBlog(m, &blogServiceListBlogServer{stream})
}

type BlogService_ListBlogServer interface {
	Send(*ListBlogResponse) error
	grpc.ServerStream
}

type blogServiceListBlogServer struct {
	grpc.ServerStream
}

func (x *blogServiceListBlogServer) Send(m *ListBlogResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _BlogService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blog.BlogService",
	HandlerType: (*BlogServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBlog",
			Handler:    _BlogService_CreateBlog_Handler,
		},
		{
			MethodName: "ReadBlog",
			Handler:    _BlogService_ReadBlog_Handler,
		},
		{
			MethodName: "ReadAllBlog",
			Handler:    _BlogService_ReadAllBlog_Handler,
		},
		{
			MethodName: "UpdateBlog",
			Handler:    _BlogService_UpdateBlog_Handler,
		},
		{
			MethodName: "DeleteBlog",
			Handler:    _BlogService_DeleteBlog_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListBlog",
			Handler:       _BlogService_ListBlog_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "blog/blogpb/blog.proto",
}

func init() { proto.RegisterFile("blog/blogpb/blog.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 518 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x56, 0x5c, 0xd7, 0x0d, 0x13, 0x89, 0x36, 0x53, 0x48, 0x1d, 0xf3, 0x57, 0x6d, 0x2f, 0x50,
	0xd1, 0x1a, 0x52, 0xb8, 0x20, 0x21, 0x41, 0xe1, 0x82, 0xd4, 0x53, 0x10, 0x17, 0x24, 0x0a, 0x9b,
	0x78, 0xe5, 0x1a, 0x19, 0xaf, 0xf1, 0x6e, 0x7b, 0x41, 0x5c, 0x78, 0x05, 0x1e, 0x8d, 0x07, 0xe0,
	0xc2, 0x83, 0x20, 0x8f, 0xbd, 0xb5, 0xeb, 0x6d, 0x68, 0xc4, 0x25, 0xd9, 0x99, 0x9d, 0xf9, 0xbe,
	0x9d, 0x6f, 0x3f, 0x2f, 0x8c, 0x66, 0xa9, 0x8c, 0xc3, 0xf2, 0x27, 0x9f, 0xd1, 0xdf, 0x7e, 0x5e,
	0x48, 0x2d, 0xd1, 0x2d, 0xd7, 0xc1, 0xed, 0x58, 0xca, 0x38, 0x15, 0x21, 0xcf, 0x93, 0x90, 0x67,
	0x99, 0xd4, 0x5c, 0x27, 0x32, 0x53, 0x55, 0x0d, 0x3b, 0x06, 0xf7, 0x30, 0x95, 0x31, 0x5e, 0x07,
	0x27, 0x89, 0xfc, 0xde, 0x76, 0xef, 0xfe, 0xb5, 0xa9, 0x93, 0x44, 0x38, 0x02, 0x8f, 0x9f, 0xea,
	0x13, 0x59, 0xf8, 0x0e, 0xe5, 0xea, 0x08, 0x6f, 0xc0, 0xaa, 0x4e, 0x74, 0x2a, 0xfc, 0x15, 0x4a,
	0x57, 0x01, 0xfa, 0xb0, 0x36, 0x97, 0x99, 0x16, 0x99, 0xf6, 0x5d, 0xca, 0x9b, 0x90, 0x1d, 0xc0,
	0xf0, 0x55, 0x21, 0xb8, 0x16, 0x25, 0xcb, 0x54, 0x7c, 0x3d, 0x15, 0x4a, 0xe3, 0x5d, 0xa0, 0xa3,
	0x11, 0xdd, 0x60, 0x02, 0xfb, 0x74, 0x66, 0x2a, 0xa0, 0x3c, 0x7b, 0x02, 0xd8, 0x6e, 0x52, 0xb9,
	0xcc, 0x94, 0xb8, 0xb2, 0x6b, 0x17, 0xd6, 0xa7, 0x82, 0x47, 0x6d, 0xa2, 0x2d, 0x58, 0x2b, 0xb7,
	0x3e, 0x9e, 0x8f, 0xe6, 0x95, 0xe1, 0x9b, 0x88, 0x4d, 0x60, 0xa3, 0xa9, 0x5d, 0x12, 0xff, 0x05,
	0x60, 0xd9, 0xf3, 0x32, 0x4d, 0xdb, 0x14, 0x23, 0xf0, 0x94, 0xe0, 0xc5, 0xfc, 0xc4, 0x30, 0x54,
	0x11, 0x22, 0xb8, 0x39, 0x8f, 0x05, 0xc9, 0xb7, 0x3a, 0xa5, 0x35, 0x7b, 0x0a, 0x9b, 0x17, 0x10,
	0x2c, 0xe2, 0x95, 0x4b, 0x89, 0x8f, 0x60, 0xf8, 0x2e, 0x8f, 0x3a, 0x1a, 0x2e, 0x1a, 0xed, 0x1c,
	0xcd, 0x59, 0x2c, 0x6e, 0x1b, 0x6d, 0xc9, 0xe1, 0x1f, 0xc2, 0xf0, 0xb5, 0x48, 0xc5, 0x72, 0x67,
	0x60, 0x7b, 0x80, 0xed, 0xea, 0x9a, 0x63, 0x61, 0xf9, 0x73, 0x58, 0x3f, 0x4a, 0x94, 0xfe, 0x5f,
	0x59, 0x27, 0xb0, 0xd1, 0xb4, 0x2f, 0x37, 0xcf, 0xe4, 0xb7, 0x0b, 0x83, 0x32, 0x7c, 0x2b, 0x8a,
	0xb3, 0x64, 0x2e, 0xf0, 0x13, 0x40, 0x63, 0x39, 0xdc, 0xaa, 0xea, 0x2d, 0xe7, 0x06, 0xbe, 0xbd,
	0x51, 0x11, 0xb2, 0x7b, 0x3f, 0x7e, 0xfd, 0xf9, 0xe9, 0x8c, 0xd9, 0x30, 0x3c, 0x7b, 0x4c, 0x1f,
	0x61, 0xc8, 0x0b, 0x9d, 0xcc, 0x53, 0xa1, 0x9e, 0x11, 0x23, 0x1e, 0x43, 0xdf, 0x58, 0x0e, 0x6f,
	0x56, 0x30, 0x1d, 0xbb, 0x06, 0xa3, 0x6e, 0xba, 0xc6, 0xde, 0x21, 0xec, 0x3b, 0x78, 0xcb, 0xc2,
	0x0e, 0xbf, 0xd5, 0x8a, 0x7e, 0xc7, 0x0f, 0x30, 0x68, 0x99, 0x0b, 0xfd, 0x06, 0xeb, 0xa2, 0x63,
	0x83, 0xf1, 0x25, 0x3b, 0x35, 0xd1, 0x98, 0x88, 0x36, 0xd1, 0x1e, 0x02, 0x3f, 0x03, 0x34, 0xb6,
	0x31, 0x02, 0x59, 0xb6, 0x34, 0x02, 0xd9, 0x0e, 0x63, 0x0f, 0x08, 0x7b, 0x87, 0xfd, 0x6b, 0x88,
	0x5a, 0xaa, 0x08, 0xa0, 0xb1, 0x8f, 0xe1, 0xb2, 0xec, 0x67, 0xb8, 0x6c, 0xa7, 0x19, 0xc1, 0x76,
	0xaf, 0x10, 0xac, 0x6f, 0x6c, 0x63, 0x2e, 0xa4, 0xe3, 0x42, 0x73, 0x21, 0x5d, 0x77, 0xb1, 0x6d,
	0xc2, 0x0f, 0xd0, 0xb7, 0xf0, 0xf7, 0x94, 0x2e, 0x04, 0xff, 0xf2, 0xa8, 0x77, 0xd8, 0x7f, 0xef,
	0x55, 0x4f, 0xf2, 0xcc, 0xa3, 0xa7, 0xf6, 0xe0, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb8, 0xa4,
	0xef, 0x44, 0xa8, 0x05, 0x00, 0x00,
}
